Problem #1:
Nodes
8/28/18 10:40 AM

This problem is from:

	CSCI 2002-91
	Course Notes
	Part II -- Linear Structures
	Nodes

For problem guidance and hints, please see the "Nodes" chapter 
listed above (and especially the "Probem #1" link).

Tools: Interfaces, generics, auto testing, object equality, minimizing public protocal.

-----------------------------------------

Please put your "public" code into this package:

	ds.linear.pub

This package will be mostly "interface" (skelaton code) allowing
a nice simple gateway into your code.

Note that the remainder of your code may be anywhere
in the "ds" package hierarchy. For example, you may want to have
your code in a package like "ds.linear.nodes". 

----------------------------------------------
Public Code

Interfaces:
	Data Holder
	SinglyLinkedNode
	DoublyLinkedNode

Factories (Classes):
	NodeFactory (seed code is provided below)

----------------------------------------------
Problem Description

Write the code needed for linked nodes needed for linear structures.

Our future purpose of these nodes will be for usage in linked lists, and then
the many linear data structures likes stacks, queues, etc.

Use generics. 

Use the class notes to drive the interface design.

NOTE WELL -- As a class, we want to use identical interfaces. Therefore,
during the class when we kick off this assignment, we will come together
to agree on "final" interfaces. They will then be put on GitHub. 
From that point on, please use these interfaces. This way, your users (graders)
will have one specified "gateway" into your software and this will
give you the best chance at higher scores. If your "gateway" is off in fact,
your software might be unusable (even if it is beautiful inside).

----------------------------------------------
Auto Testing

To maximize your score auto test your code.